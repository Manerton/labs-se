#include <iostream>
#include <string>
#include "Triangle.h"


using namespace std;

int main()
{
    /// треугольник 2, 4, 5: S = 3.8, P = 11, углы: 108.21; 22.33; 49.46; ha 3.8; hb 1.9; hc 1.52
    /// треугольник 3, 4, 5: S = 6, P = 12, углы: 90; 36.87; 53.13; ha 4; hb 3; hc 2.4;
    /// треугольник 3, 4, 6: S = 5.33, P = 13, углы: 117.28; 36.34; 26.38; ha 3.555; hb 2.666; hc 1.778;

    system("chcp 1251 > nul");
    cout << "Лабораторная работа №1. Вариант 7.\nАвтор: Катунин Сергей. ДИПРБ-21.\n" << endl;
    cout << "Проект 2." << endl;
    cout << "Условие: Разработать класс Triangle, представляющий собой треугольник на плоскости, определенный по трем сторонам." << endl << endl;
    cout << "Требуется реализовать следующие методы: вычисление площади и периметра, определение вида треугольника, вычисление высот, вычисление углов, сравнение треугольников по площади и по периметру, определение подобия треугольников по трем сторонам." << endl << endl;

    try // ищем исключения, которые выбрасываются в блоке try и отправляем их для обработки в блок(и) catch
    {
        cout << "1. Создание треугольника Tri1, инициализация значениями 2, 4, 5 и последующий вывод треугольника Tri1." << endl;
        Triangle Tri1(2,4,5);
        Tri1.Display();
        cout << "\nРазмер класса в байтах: "; // в режиме pragma pack (1) будет такой же размер, так как все три поля класса одного типа double
        cout << sizeof(Tri1) << endl;
        cout << "\n2. Создание треугольника Tri2, инициализация значениями введенными с клавиатуры." << endl;
        Triangle Tri2;
        Tri2.Read();
        Tri2.Display();
        cout << "\n3. Создание треугольника Tri3, инициализация объектом Tri2 и последующий вывод Tri3." << endl;
        Triangle Tri3 = Tri2;
        Tri3.Display();
        cout << "\n4. Поиск периметра треугольника Tri3: ";
        cout << Tri3.FindPerimeter() << endl;
        cout << "\n5. Поиск площади Tri3: ";
        cout << Tri3.FindSquare() << endl;
        cout << "\n6. Определение вида треугольника Tri3: " << endl;
        Tri3.TriangleKind();
        cout << "\n7. Вычисление высот треугольника Tri3: " << endl;
        Tri3.FindHeight();
        cout << "\n8. Вычисление углов треугольника Tri3: " << endl;
        Tri3.DisplayAngles();
        cout << "\n9. Сравнение треугольника Tri3 и Tri1: " << endl;
        Tri3.CompareTwoTriangles(Tri1);
        cout << "\n10. Определение подобия треугольников Tri3 и Tri1: " << endl;
        Tri3.Podobie(Tri1);

    }
    catch (const char* exception) // обработка исключений типа const char*
    {
        cerr << "Ошибка: " << exception << endl;
    }
    return 0;
}
